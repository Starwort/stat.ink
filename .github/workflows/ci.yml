name: 'CI'
on: ['push']
jobs:
  ciDoesNotSkip:
    runs-on: 'ubuntu-latest'
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - run: 'echo "CI Running"'

  phpSyntaxCheck:
    name: 'PHP Syntax Check'
    strategy:
      matrix:
        php_version:
          - '7.4'
    runs-on: 'ubuntu-latest'
    needs:
      - 'ciDoesNotSkip'
    steps:
      - uses: 'actions/checkout@v2'
      - run: |
          sudo update-alternatives --set php /usr/bin/php${{ matrix.php_version }}
          php -v
          find . \( -type d \( -name '.git' -or -name 'vendor' -or -name 'runtime' \) -prune \) -or \( -type f -name '*.php' -print \) | LANG=C sort | xargs -n 1 php -l

  phpStyleCheck:
    name: 'PHP Coding Style'
    runs-on: 'ubuntu-latest'
    needs:
      - 'ciDoesNotSkip'
    steps:
      - uses: 'actions/checkout@v2'
      - run: 'curl -fsSL -o phpcs "https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar"'
      - run: |
          php -v
          php phpcs --version
          php phpcs -p

  phpCheckAuthor:
    name: 'Check Author'
    runs-on: 'ubuntu-latest'
    needs:
      - 'ciDoesNotSkip'
    steps:
      - uses: 'actions/checkout@v1'
      - run: |
          sudo update-alternatives --set php /usr/bin/php7.4
          rm -f composer.json composer.lock vendor
          cp composer.check-author.json composer.json
          make vendor
          patch -p0 -d vendor/phpcq/author-validation < data/patch/check-author.nofollow.patch
      - run: |
          php -d memory_limit=-1 vendor/bin/check-author.php --php-files \
            actions \
            assets \
            commands \
            components \
            controllers \
            messages \
            migrations \
            models

  jsStyleCheck:
    name: 'JS Coding Style'
    runs-on: 'ubuntu-latest'
    needs:
      - 'ciDoesNotSkip'
    steps:
      - uses: 'actions/checkout@v2'
      - run: 'npm ci'
      - run: 'npx eslint "resources/**/*.es" "resources/**/*.js"'

  cssStyleCheck:
    name: 'CSS Coding Style'
    runs-on: 'ubuntu-latest'
    needs:
      - 'ciDoesNotSkip'
    steps:
      - uses: 'actions/checkout@v2'
      - run: 'npm ci'
      - run: 'npx stylelint "resources/**/*.less" "resources/**/*.css"'

  phpUnit:
    name: 'Build & Test'
    needs:
      - 'ciDoesNotSkip'
      - 'phpSyntaxCheck'
    strategy:
      matrix:
        php_version:
          - '7.4'
        pgsql_version:
          - '9.5-alpine'    # minimum requirement
          - 'alpine'        # latest version
    services:
      postgres:
        image: "postgres:${{ matrix.pgsql_version }}"
        ports:
          - '5432:5432'
        env:
          POSTGRES_USER: 'statink'
          POSTGRES_PASSWORD: 'statink'
          POSTGRES_DB: 'statink'
          POSTGRES_INITDB_ARGS: '-E UTF-8 --locale=en_US.UTF8 -k'
        options: '--health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5'
    env:
      GEOIP_LICENSE_KEY: '${{ secrets.GEOIP_LICENSE_KEY }}'
    runs-on: 'ubuntu-latest'
    steps:
      - run: 'sudo apt install -y brotli jpegoptim libxml2-utils php${{ matrix.php_version }}-intl'
      - run: 'sudo update-alternatives --set php /usr/bin/php${{ matrix.php_version }}'
      - uses: 'actions/checkout@v1'
      - uses: 'actions/setup-node@v1'
        with:
          node-version: '12.x'
      - run: |
          # display versions
          php --version
          echo
          echo -n "Node: "
          node --version
          echo
          echo -n "NPM: "
          npm --version
      - run: 'make init'
      - run: './yii secret/db localhost statink'
      - run: 'make migrate-db'
      - run: 'make test'
